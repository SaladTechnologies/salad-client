/*
SaladCloud Public API

The SaladCloud Public API.

API version: 1.0.0-alpha.56
Contact: support@salad.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package salad-client

import (
	"encoding/json"
)

// checks if the ContainerGroupInstanceStatusCount type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ContainerGroupInstanceStatusCount{}

// ContainerGroupInstanceStatusCount Represents a container group instance status count
type ContainerGroupInstanceStatusCount struct {
	AllocatingCount int32 `json:"allocating_count"`
	CreatingCount int32 `json:"creating_count"`
	RunningCount int32 `json:"running_count"`
}

// NewContainerGroupInstanceStatusCount instantiates a new ContainerGroupInstanceStatusCount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContainerGroupInstanceStatusCount(allocatingCount int32, creatingCount int32, runningCount int32) *ContainerGroupInstanceStatusCount {
	this := ContainerGroupInstanceStatusCount{}
	this.AllocatingCount = allocatingCount
	this.CreatingCount = creatingCount
	this.RunningCount = runningCount
	return &this
}

// NewContainerGroupInstanceStatusCountWithDefaults instantiates a new ContainerGroupInstanceStatusCount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContainerGroupInstanceStatusCountWithDefaults() *ContainerGroupInstanceStatusCount {
	this := ContainerGroupInstanceStatusCount{}
	return &this
}

// GetAllocatingCount returns the AllocatingCount field value
func (o *ContainerGroupInstanceStatusCount) GetAllocatingCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AllocatingCount
}

// GetAllocatingCountOk returns a tuple with the AllocatingCount field value
// and a boolean to check if the value has been set.
func (o *ContainerGroupInstanceStatusCount) GetAllocatingCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AllocatingCount, true
}

// SetAllocatingCount sets field value
func (o *ContainerGroupInstanceStatusCount) SetAllocatingCount(v int32) {
	o.AllocatingCount = v
}

// GetCreatingCount returns the CreatingCount field value
func (o *ContainerGroupInstanceStatusCount) GetCreatingCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CreatingCount
}

// GetCreatingCountOk returns a tuple with the CreatingCount field value
// and a boolean to check if the value has been set.
func (o *ContainerGroupInstanceStatusCount) GetCreatingCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatingCount, true
}

// SetCreatingCount sets field value
func (o *ContainerGroupInstanceStatusCount) SetCreatingCount(v int32) {
	o.CreatingCount = v
}

// GetRunningCount returns the RunningCount field value
func (o *ContainerGroupInstanceStatusCount) GetRunningCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RunningCount
}

// GetRunningCountOk returns a tuple with the RunningCount field value
// and a boolean to check if the value has been set.
func (o *ContainerGroupInstanceStatusCount) GetRunningCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RunningCount, true
}

// SetRunningCount sets field value
func (o *ContainerGroupInstanceStatusCount) SetRunningCount(v int32) {
	o.RunningCount = v
}

func (o ContainerGroupInstanceStatusCount) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ContainerGroupInstanceStatusCount) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["allocating_count"] = o.AllocatingCount
	toSerialize["creating_count"] = o.CreatingCount
	toSerialize["running_count"] = o.RunningCount
	return toSerialize, nil
}

type NullableContainerGroupInstanceStatusCount struct {
	value *ContainerGroupInstanceStatusCount
	isSet bool
}

func (v NullableContainerGroupInstanceStatusCount) Get() *ContainerGroupInstanceStatusCount {
	return v.value
}

func (v *NullableContainerGroupInstanceStatusCount) Set(val *ContainerGroupInstanceStatusCount) {
	v.value = val
	v.isSet = true
}

func (v NullableContainerGroupInstanceStatusCount) IsSet() bool {
	return v.isSet
}

func (v *NullableContainerGroupInstanceStatusCount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainerGroupInstanceStatusCount(val *ContainerGroupInstanceStatusCount) *NullableContainerGroupInstanceStatusCount {
	return &NullableContainerGroupInstanceStatusCount{value: val, isSet: true}
}

func (v NullableContainerGroupInstanceStatusCount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainerGroupInstanceStatusCount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


