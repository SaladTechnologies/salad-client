/*
SaladCloud API

The SaladCloud REST API. Please refer to the [SaladCloud API Documentation](https://docs.salad.com/api-reference) for more details.

API version: 0.9.0-alpha.11
Contact: cloud@salad.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package saladclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the QueueJobPrototype type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QueueJobPrototype{}

// QueueJobPrototype Represents a request to create a queue job
type QueueJobPrototype struct {
	Input interface{} `json:"input"`
	// Additional metadata for the job
	Metadata map[string]interface{} `json:"metadata,omitempty"`
	// The webhook to call when the job completes
	Webhook *string `json:"webhook,omitempty" validate:"regexp=^.*$"`
}

type _QueueJobPrototype QueueJobPrototype

// NewQueueJobPrototype instantiates a new QueueJobPrototype object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueueJobPrototype(input interface{}) *QueueJobPrototype {
	this := QueueJobPrototype{}
	this.Input = input
	return &this
}

// NewQueueJobPrototypeWithDefaults instantiates a new QueueJobPrototype object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueueJobPrototypeWithDefaults() *QueueJobPrototype {
	this := QueueJobPrototype{}
	return &this
}

// GetInput returns the Input field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *QueueJobPrototype) GetInput() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.Input
}

// GetInputOk returns a tuple with the Input field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QueueJobPrototype) GetInputOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Input) {
		return nil, false
	}
	return &o.Input, true
}

// SetInput sets field value
func (o *QueueJobPrototype) SetInput(v interface{}) {
	o.Input = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *QueueJobPrototype) GetMetadata() map[string]interface{} {
	if o == nil || IsNil(o.Metadata) {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueueJobPrototype) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return map[string]interface{}{}, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *QueueJobPrototype) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *QueueJobPrototype) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

// GetWebhook returns the Webhook field value if set, zero value otherwise.
func (o *QueueJobPrototype) GetWebhook() string {
	if o == nil || IsNil(o.Webhook) {
		var ret string
		return ret
	}
	return *o.Webhook
}

// GetWebhookOk returns a tuple with the Webhook field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueueJobPrototype) GetWebhookOk() (*string, bool) {
	if o == nil || IsNil(o.Webhook) {
		return nil, false
	}
	return o.Webhook, true
}

// HasWebhook returns a boolean if a field has been set.
func (o *QueueJobPrototype) HasWebhook() bool {
	if o != nil && !IsNil(o.Webhook) {
		return true
	}

	return false
}

// SetWebhook gets a reference to the given string and assigns it to the Webhook field.
func (o *QueueJobPrototype) SetWebhook(v string) {
	o.Webhook = &v
}

func (o QueueJobPrototype) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QueueJobPrototype) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Input != nil {
		toSerialize["input"] = o.Input
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.Webhook) {
		toSerialize["webhook"] = o.Webhook
	}
	return toSerialize, nil
}

func (o *QueueJobPrototype) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"input",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQueueJobPrototype := _QueueJobPrototype{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varQueueJobPrototype)

	if err != nil {
		return err
	}

	*o = QueueJobPrototype(varQueueJobPrototype)

	return err
}

type NullableQueueJobPrototype struct {
	value *QueueJobPrototype
	isSet bool
}

func (v NullableQueueJobPrototype) Get() *QueueJobPrototype {
	return v.value
}

func (v *NullableQueueJobPrototype) Set(val *QueueJobPrototype) {
	v.value = val
	v.isSet = true
}

func (v NullableQueueJobPrototype) IsSet() bool {
	return v.isSet
}

func (v *NullableQueueJobPrototype) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueueJobPrototype(val *QueueJobPrototype) *NullableQueueJobPrototype {
	return &NullableQueueJobPrototype{value: val, isSet: true}
}

func (v NullableQueueJobPrototype) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueueJobPrototype) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


