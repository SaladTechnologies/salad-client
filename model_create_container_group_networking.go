/*
SaladCloud API

The SaladCloud REST API. Please refer to the [SaladCloud API Documentation](https://docs.salad.com/api-reference) for more details.

API version: 0.9.0-alpha.11
Contact: cloud@salad.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package saladclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateContainerGroupNetworking type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateContainerGroupNetworking{}

// CreateContainerGroupNetworking Network configuration for container groups specifying connectivity parameters, including authentication, protocol, and timeout settings
type CreateContainerGroupNetworking struct {
	// Determines whether authentication is required for network connections to the container group
	Auth bool `json:"auth"`
	// The container group networking client request timeout.
	ClientRequestTimeout *int32 `json:"client_request_timeout,omitempty"`
	LoadBalancer *ContainerGroupNetworkingLoadBalancer `json:"load_balancer,omitempty"`
	// The container group networking port.
	Port int32 `json:"port"`
	Protocol ContainerNetworkingProtocol `json:"protocol"`
	// The container group networking server response timeout.
	ServerResponseTimeout *int32 `json:"server_response_timeout,omitempty"`
	// The container group networking single connection limit flag.
	SingleConnectionLimit *bool `json:"single_connection_limit,omitempty"`
}

type _CreateContainerGroupNetworking CreateContainerGroupNetworking

// NewCreateContainerGroupNetworking instantiates a new CreateContainerGroupNetworking object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateContainerGroupNetworking(auth bool, port int32, protocol ContainerNetworkingProtocol) *CreateContainerGroupNetworking {
	this := CreateContainerGroupNetworking{}
	this.Auth = auth
	var clientRequestTimeout int32 = 100000
	this.ClientRequestTimeout = &clientRequestTimeout
	var loadBalancer ContainerGroupNetworkingLoadBalancer = CONTAINERGROUPNETWORKINGLOADBALANCER_ROUND_ROBIN
	this.LoadBalancer = &loadBalancer
	this.Port = port
	this.Protocol = protocol
	var serverResponseTimeout int32 = 100000
	this.ServerResponseTimeout = &serverResponseTimeout
	var singleConnectionLimit bool = false
	this.SingleConnectionLimit = &singleConnectionLimit
	return &this
}

// NewCreateContainerGroupNetworkingWithDefaults instantiates a new CreateContainerGroupNetworking object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateContainerGroupNetworkingWithDefaults() *CreateContainerGroupNetworking {
	this := CreateContainerGroupNetworking{}
	var clientRequestTimeout int32 = 100000
	this.ClientRequestTimeout = &clientRequestTimeout
	var loadBalancer ContainerGroupNetworkingLoadBalancer = CONTAINERGROUPNETWORKINGLOADBALANCER_ROUND_ROBIN
	this.LoadBalancer = &loadBalancer
	var serverResponseTimeout int32 = 100000
	this.ServerResponseTimeout = &serverResponseTimeout
	var singleConnectionLimit bool = false
	this.SingleConnectionLimit = &singleConnectionLimit
	return &this
}

// GetAuth returns the Auth field value
func (o *CreateContainerGroupNetworking) GetAuth() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Auth
}

// GetAuthOk returns a tuple with the Auth field value
// and a boolean to check if the value has been set.
func (o *CreateContainerGroupNetworking) GetAuthOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Auth, true
}

// SetAuth sets field value
func (o *CreateContainerGroupNetworking) SetAuth(v bool) {
	o.Auth = v
}

// GetClientRequestTimeout returns the ClientRequestTimeout field value if set, zero value otherwise.
func (o *CreateContainerGroupNetworking) GetClientRequestTimeout() int32 {
	if o == nil || IsNil(o.ClientRequestTimeout) {
		var ret int32
		return ret
	}
	return *o.ClientRequestTimeout
}

// GetClientRequestTimeoutOk returns a tuple with the ClientRequestTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateContainerGroupNetworking) GetClientRequestTimeoutOk() (*int32, bool) {
	if o == nil || IsNil(o.ClientRequestTimeout) {
		return nil, false
	}
	return o.ClientRequestTimeout, true
}

// HasClientRequestTimeout returns a boolean if a field has been set.
func (o *CreateContainerGroupNetworking) HasClientRequestTimeout() bool {
	if o != nil && !IsNil(o.ClientRequestTimeout) {
		return true
	}

	return false
}

// SetClientRequestTimeout gets a reference to the given int32 and assigns it to the ClientRequestTimeout field.
func (o *CreateContainerGroupNetworking) SetClientRequestTimeout(v int32) {
	o.ClientRequestTimeout = &v
}

// GetLoadBalancer returns the LoadBalancer field value if set, zero value otherwise.
func (o *CreateContainerGroupNetworking) GetLoadBalancer() ContainerGroupNetworkingLoadBalancer {
	if o == nil || IsNil(o.LoadBalancer) {
		var ret ContainerGroupNetworkingLoadBalancer
		return ret
	}
	return *o.LoadBalancer
}

// GetLoadBalancerOk returns a tuple with the LoadBalancer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateContainerGroupNetworking) GetLoadBalancerOk() (*ContainerGroupNetworkingLoadBalancer, bool) {
	if o == nil || IsNil(o.LoadBalancer) {
		return nil, false
	}
	return o.LoadBalancer, true
}

// HasLoadBalancer returns a boolean if a field has been set.
func (o *CreateContainerGroupNetworking) HasLoadBalancer() bool {
	if o != nil && !IsNil(o.LoadBalancer) {
		return true
	}

	return false
}

// SetLoadBalancer gets a reference to the given ContainerGroupNetworkingLoadBalancer and assigns it to the LoadBalancer field.
func (o *CreateContainerGroupNetworking) SetLoadBalancer(v ContainerGroupNetworkingLoadBalancer) {
	o.LoadBalancer = &v
}

// GetPort returns the Port field value
func (o *CreateContainerGroupNetworking) GetPort() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Port
}

// GetPortOk returns a tuple with the Port field value
// and a boolean to check if the value has been set.
func (o *CreateContainerGroupNetworking) GetPortOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Port, true
}

// SetPort sets field value
func (o *CreateContainerGroupNetworking) SetPort(v int32) {
	o.Port = v
}

// GetProtocol returns the Protocol field value
func (o *CreateContainerGroupNetworking) GetProtocol() ContainerNetworkingProtocol {
	if o == nil {
		var ret ContainerNetworkingProtocol
		return ret
	}

	return o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value
// and a boolean to check if the value has been set.
func (o *CreateContainerGroupNetworking) GetProtocolOk() (*ContainerNetworkingProtocol, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Protocol, true
}

// SetProtocol sets field value
func (o *CreateContainerGroupNetworking) SetProtocol(v ContainerNetworkingProtocol) {
	o.Protocol = v
}

// GetServerResponseTimeout returns the ServerResponseTimeout field value if set, zero value otherwise.
func (o *CreateContainerGroupNetworking) GetServerResponseTimeout() int32 {
	if o == nil || IsNil(o.ServerResponseTimeout) {
		var ret int32
		return ret
	}
	return *o.ServerResponseTimeout
}

// GetServerResponseTimeoutOk returns a tuple with the ServerResponseTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateContainerGroupNetworking) GetServerResponseTimeoutOk() (*int32, bool) {
	if o == nil || IsNil(o.ServerResponseTimeout) {
		return nil, false
	}
	return o.ServerResponseTimeout, true
}

// HasServerResponseTimeout returns a boolean if a field has been set.
func (o *CreateContainerGroupNetworking) HasServerResponseTimeout() bool {
	if o != nil && !IsNil(o.ServerResponseTimeout) {
		return true
	}

	return false
}

// SetServerResponseTimeout gets a reference to the given int32 and assigns it to the ServerResponseTimeout field.
func (o *CreateContainerGroupNetworking) SetServerResponseTimeout(v int32) {
	o.ServerResponseTimeout = &v
}

// GetSingleConnectionLimit returns the SingleConnectionLimit field value if set, zero value otherwise.
func (o *CreateContainerGroupNetworking) GetSingleConnectionLimit() bool {
	if o == nil || IsNil(o.SingleConnectionLimit) {
		var ret bool
		return ret
	}
	return *o.SingleConnectionLimit
}

// GetSingleConnectionLimitOk returns a tuple with the SingleConnectionLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateContainerGroupNetworking) GetSingleConnectionLimitOk() (*bool, bool) {
	if o == nil || IsNil(o.SingleConnectionLimit) {
		return nil, false
	}
	return o.SingleConnectionLimit, true
}

// HasSingleConnectionLimit returns a boolean if a field has been set.
func (o *CreateContainerGroupNetworking) HasSingleConnectionLimit() bool {
	if o != nil && !IsNil(o.SingleConnectionLimit) {
		return true
	}

	return false
}

// SetSingleConnectionLimit gets a reference to the given bool and assigns it to the SingleConnectionLimit field.
func (o *CreateContainerGroupNetworking) SetSingleConnectionLimit(v bool) {
	o.SingleConnectionLimit = &v
}

func (o CreateContainerGroupNetworking) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateContainerGroupNetworking) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["auth"] = o.Auth
	if !IsNil(o.ClientRequestTimeout) {
		toSerialize["client_request_timeout"] = o.ClientRequestTimeout
	}
	if !IsNil(o.LoadBalancer) {
		toSerialize["load_balancer"] = o.LoadBalancer
	}
	toSerialize["port"] = o.Port
	toSerialize["protocol"] = o.Protocol
	if !IsNil(o.ServerResponseTimeout) {
		toSerialize["server_response_timeout"] = o.ServerResponseTimeout
	}
	if !IsNil(o.SingleConnectionLimit) {
		toSerialize["single_connection_limit"] = o.SingleConnectionLimit
	}
	return toSerialize, nil
}

func (o *CreateContainerGroupNetworking) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"auth",
		"port",
		"protocol",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateContainerGroupNetworking := _CreateContainerGroupNetworking{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateContainerGroupNetworking)

	if err != nil {
		return err
	}

	*o = CreateContainerGroupNetworking(varCreateContainerGroupNetworking)

	return err
}

type NullableCreateContainerGroupNetworking struct {
	value *CreateContainerGroupNetworking
	isSet bool
}

func (v NullableCreateContainerGroupNetworking) Get() *CreateContainerGroupNetworking {
	return v.value
}

func (v *NullableCreateContainerGroupNetworking) Set(val *CreateContainerGroupNetworking) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateContainerGroupNetworking) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateContainerGroupNetworking) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateContainerGroupNetworking(val *CreateContainerGroupNetworking) *NullableCreateContainerGroupNetworking {
	return &NullableCreateContainerGroupNetworking{value: val, isSet: true}
}

func (v NullableCreateContainerGroupNetworking) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateContainerGroupNetworking) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


