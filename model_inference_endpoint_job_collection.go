/*
SaladCloud API

The SaladCloud REST API. Please refer to the [SaladCloud API Documentation](https://docs.salad.com/api-reference) for more details.

API version: 0.9.0-alpha.11
Contact: cloud@salad.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package saladclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the InferenceEndpointJobCollection type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InferenceEndpointJobCollection{}

// InferenceEndpointJobCollection Represents a collection of inference endpoint jobs
type InferenceEndpointJobCollection struct {
	// The list of inference endpoint jobs.
	Items []InferenceEndpointJob `json:"items"`
	// The page number.
	Page int32 `json:"page"`
	// The maximum number of items per page.
	PageSize int32 `json:"page_size"`
	// The total number of items in the collection.
	TotalSize int32 `json:"total_size"`
}

type _InferenceEndpointJobCollection InferenceEndpointJobCollection

// NewInferenceEndpointJobCollection instantiates a new InferenceEndpointJobCollection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInferenceEndpointJobCollection(items []InferenceEndpointJob, page int32, pageSize int32, totalSize int32) *InferenceEndpointJobCollection {
	this := InferenceEndpointJobCollection{}
	this.Items = items
	this.Page = page
	this.PageSize = pageSize
	this.TotalSize = totalSize
	return &this
}

// NewInferenceEndpointJobCollectionWithDefaults instantiates a new InferenceEndpointJobCollection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInferenceEndpointJobCollectionWithDefaults() *InferenceEndpointJobCollection {
	this := InferenceEndpointJobCollection{}
	return &this
}

// GetItems returns the Items field value
func (o *InferenceEndpointJobCollection) GetItems() []InferenceEndpointJob {
	if o == nil {
		var ret []InferenceEndpointJob
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *InferenceEndpointJobCollection) GetItemsOk() ([]InferenceEndpointJob, bool) {
	if o == nil {
		return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *InferenceEndpointJobCollection) SetItems(v []InferenceEndpointJob) {
	o.Items = v
}

// GetPage returns the Page field value
func (o *InferenceEndpointJobCollection) GetPage() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Page
}

// GetPageOk returns a tuple with the Page field value
// and a boolean to check if the value has been set.
func (o *InferenceEndpointJobCollection) GetPageOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Page, true
}

// SetPage sets field value
func (o *InferenceEndpointJobCollection) SetPage(v int32) {
	o.Page = v
}

// GetPageSize returns the PageSize field value
func (o *InferenceEndpointJobCollection) GetPageSize() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value
// and a boolean to check if the value has been set.
func (o *InferenceEndpointJobCollection) GetPageSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PageSize, true
}

// SetPageSize sets field value
func (o *InferenceEndpointJobCollection) SetPageSize(v int32) {
	o.PageSize = v
}

// GetTotalSize returns the TotalSize field value
func (o *InferenceEndpointJobCollection) GetTotalSize() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TotalSize
}

// GetTotalSizeOk returns a tuple with the TotalSize field value
// and a boolean to check if the value has been set.
func (o *InferenceEndpointJobCollection) GetTotalSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalSize, true
}

// SetTotalSize sets field value
func (o *InferenceEndpointJobCollection) SetTotalSize(v int32) {
	o.TotalSize = v
}

func (o InferenceEndpointJobCollection) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InferenceEndpointJobCollection) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["items"] = o.Items
	toSerialize["page"] = o.Page
	toSerialize["page_size"] = o.PageSize
	toSerialize["total_size"] = o.TotalSize
	return toSerialize, nil
}

func (o *InferenceEndpointJobCollection) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"items",
		"page",
		"page_size",
		"total_size",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varInferenceEndpointJobCollection := _InferenceEndpointJobCollection{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varInferenceEndpointJobCollection)

	if err != nil {
		return err
	}

	*o = InferenceEndpointJobCollection(varInferenceEndpointJobCollection)

	return err
}

type NullableInferenceEndpointJobCollection struct {
	value *InferenceEndpointJobCollection
	isSet bool
}

func (v NullableInferenceEndpointJobCollection) Get() *InferenceEndpointJobCollection {
	return v.value
}

func (v *NullableInferenceEndpointJobCollection) Set(val *InferenceEndpointJobCollection) {
	v.value = val
	v.isSet = true
}

func (v NullableInferenceEndpointJobCollection) IsSet() bool {
	return v.isSet
}

func (v *NullableInferenceEndpointJobCollection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInferenceEndpointJobCollection(val *InferenceEndpointJobCollection) *NullableInferenceEndpointJobCollection {
	return &NullableInferenceEndpointJobCollection{value: val, isSet: true}
}

func (v NullableInferenceEndpointJobCollection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInferenceEndpointJobCollection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


