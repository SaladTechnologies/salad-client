/*
SaladCloud API

The SaladCloud REST API. Please refer to the [SaladCloud API Documentation](https://docs.salad.com/api-reference) for more details.

API version: 0.9.0-alpha.11
Contact: cloud@salad.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package saladclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ContainerResourceRequirements type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ContainerResourceRequirements{}

// ContainerResourceRequirements Specifies the resource requirements for a container.
type ContainerResourceRequirements struct {
	// The number of CPU cores required by the container. Must be between 1 and 16.
	Cpu int32 `json:"cpu"`
	// The amount of memory (in MB) required by the container. Must be between 1024 MB and 61440 MB.
	Memory int32 `json:"memory"`
	// A list of GPU class UUIDs required by the container. Can be null if no GPU is required.
	GpuClasses []string `json:"gpu_classes"`
	// The amount of storage (in bytes) required by the container. Must be between 1 GB (1073741824 bytes) and 50 GB (53687091200 bytes).
	StorageAmount *int64 `json:"storage_amount,omitempty"`
}

type _ContainerResourceRequirements ContainerResourceRequirements

// NewContainerResourceRequirements instantiates a new ContainerResourceRequirements object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContainerResourceRequirements(cpu int32, memory int32, gpuClasses []string) *ContainerResourceRequirements {
	this := ContainerResourceRequirements{}
	this.Cpu = cpu
	this.Memory = memory
	this.GpuClasses = gpuClasses
	return &this
}

// NewContainerResourceRequirementsWithDefaults instantiates a new ContainerResourceRequirements object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContainerResourceRequirementsWithDefaults() *ContainerResourceRequirements {
	this := ContainerResourceRequirements{}
	return &this
}

// GetCpu returns the Cpu field value
func (o *ContainerResourceRequirements) GetCpu() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Cpu
}

// GetCpuOk returns a tuple with the Cpu field value
// and a boolean to check if the value has been set.
func (o *ContainerResourceRequirements) GetCpuOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cpu, true
}

// SetCpu sets field value
func (o *ContainerResourceRequirements) SetCpu(v int32) {
	o.Cpu = v
}

// GetMemory returns the Memory field value
func (o *ContainerResourceRequirements) GetMemory() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Memory
}

// GetMemoryOk returns a tuple with the Memory field value
// and a boolean to check if the value has been set.
func (o *ContainerResourceRequirements) GetMemoryOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Memory, true
}

// SetMemory sets field value
func (o *ContainerResourceRequirements) SetMemory(v int32) {
	o.Memory = v
}

// GetGpuClasses returns the GpuClasses field value
// If the value is explicit nil, the zero value for []string will be returned
func (o *ContainerResourceRequirements) GetGpuClasses() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.GpuClasses
}

// GetGpuClassesOk returns a tuple with the GpuClasses field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContainerResourceRequirements) GetGpuClassesOk() ([]string, bool) {
	if o == nil || IsNil(o.GpuClasses) {
		return nil, false
	}
	return o.GpuClasses, true
}

// SetGpuClasses sets field value
func (o *ContainerResourceRequirements) SetGpuClasses(v []string) {
	o.GpuClasses = v
}

// GetStorageAmount returns the StorageAmount field value if set, zero value otherwise.
func (o *ContainerResourceRequirements) GetStorageAmount() int64 {
	if o == nil || IsNil(o.StorageAmount) {
		var ret int64
		return ret
	}
	return *o.StorageAmount
}

// GetStorageAmountOk returns a tuple with the StorageAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerResourceRequirements) GetStorageAmountOk() (*int64, bool) {
	if o == nil || IsNil(o.StorageAmount) {
		return nil, false
	}
	return o.StorageAmount, true
}

// HasStorageAmount returns a boolean if a field has been set.
func (o *ContainerResourceRequirements) HasStorageAmount() bool {
	if o != nil && !IsNil(o.StorageAmount) {
		return true
	}

	return false
}

// SetStorageAmount gets a reference to the given int64 and assigns it to the StorageAmount field.
func (o *ContainerResourceRequirements) SetStorageAmount(v int64) {
	o.StorageAmount = &v
}

func (o ContainerResourceRequirements) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ContainerResourceRequirements) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cpu"] = o.Cpu
	toSerialize["memory"] = o.Memory
	if o.GpuClasses != nil {
		toSerialize["gpu_classes"] = o.GpuClasses
	}
	if !IsNil(o.StorageAmount) {
		toSerialize["storage_amount"] = o.StorageAmount
	}
	return toSerialize, nil
}

func (o *ContainerResourceRequirements) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"cpu",
		"memory",
		"gpu_classes",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varContainerResourceRequirements := _ContainerResourceRequirements{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varContainerResourceRequirements)

	if err != nil {
		return err
	}

	*o = ContainerResourceRequirements(varContainerResourceRequirements)

	return err
}

type NullableContainerResourceRequirements struct {
	value *ContainerResourceRequirements
	isSet bool
}

func (v NullableContainerResourceRequirements) Get() *ContainerResourceRequirements {
	return v.value
}

func (v *NullableContainerResourceRequirements) Set(val *ContainerResourceRequirements) {
	v.value = val
	v.isSet = true
}

func (v NullableContainerResourceRequirements) IsSet() bool {
	return v.isSet
}

func (v *NullableContainerResourceRequirements) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainerResourceRequirements(val *ContainerResourceRequirements) *NullableContainerResourceRequirements {
	return &NullableContainerResourceRequirements{value: val, isSet: true}
}

func (v NullableContainerResourceRequirements) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainerResourceRequirements) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


